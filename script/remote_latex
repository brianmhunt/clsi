#!/usr/bin/env ruby
require 'webrick'
include WEBrick
require "soap/wsdlDriver"
require 'rexml/document'

unless ARGV.size == 2
  puts "Usage: #{$0} <clsi-host> <filename>"
  exit
end
host = ARGV[0]
filename = ARGV[1]

#s = HTTPServer.new(
#  :Port            => 2000,
#  :DocumentRoot    => Dir::pwd
#

# Start resources server
#print "Starting resources server...\n"
#pid = fork{ 
#  trap("INT"){ s.shutdown } 
#  s.start
#}

# Create SOAP driver
wsdl = "#{host}/Clsi/wsdl"
clsi = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver
token = clsi.getToken

print "Sending compile request...\n"
response = clsi.compile(<<-EOS
  <compile>
    <token>#{token}</token>
    <resources>
      <resource path='main.tex'>#{File.read(filename)}</resource>
      <resource path='*' url='http://localhost:2000/%path%' />
    </resources>
  </compile>
EOS
)

# Shutdown resources server
#Process.kill('INT', pid)

# Parse response
parser = REXML::Document.new response

status = parser.elements['compile'].elements['status'].text
print "Compile status: #{status}\n"

unless parser.elements['compile'].elements['output'].nil?
  print "The following files were returned:\n"
  for file in parser.elements['compile'].elements['output'].elements
    print "\t#{file.attributes['url']}\n"
    system("wget #{host}/#{file.attributes['url']}")
  end
end

